---

# project information
project_name: openshot
project_url: "https://openshot.org/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openshot-logo.png"
project_blurb: "[OpenShot]({{ project_url }}) Video Editor is an award-winning free and open-source video editor for Linux, Mac, and Windows, and is dedicated to delivering high quality video editing and animation solutions to the world."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_categories: "Video Editor"
project_blurb_optional_extras_enabled: false
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "latest"}
# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "User's home directory in the container, stores program settings and files."}
param_usage_include_ports: true
param_ports:
  - {external_port: "3000", internal_port: "3000", port_desc: "OpenShot desktop gui (for reverse proxy only)."}
  - {external_port: "3001", internal_port: "3001", port_desc: "OpenShot desktop gui HTTPS."}
opt_security_opt_param: true
opt_security_opt_param_vars:
  - {run_var: "seccomp=unconfined", compose_var: "seccomp:unconfined", desc: "For Docker Engine only, many modern gui apps need this to function on older hosts as syscalls are unknown to Docker."}
# Selkies blurb settings
selkies_blurb: true
show_nvidia: true
external_http_port: "3000"
external_https_port: "3001"
noto_fonts: "font-noto-cjk"
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  The application can be accessed at:

  * https://yourhost:3001/
# init diagram
init_diagram: |
  "openshot:latest": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-kasmvnc-end -> init-config
    init-os-end -> init-config
    init-config -> init-config-end
    init-crontab-config -> init-config-end
    init-config -> init-crontab-config
    init-mods-end -> init-custom-files
    init-adduser -> init-device-perms
    base -> init-envfile
    init-os-end -> init-kasmvnc
    init-nginx -> init-kasmvnc-config
    init-video -> init-kasmvnc-end
    base -> init-migrations
    init-config-end -> init-mods
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    init-kasmvnc -> init-nginx
    init-adduser -> init-os-end
    init-device-perms -> init-os-end
    init-envfile -> init-os-end
    init-custom-files -> init-services
    init-kasmvnc-config -> init-video
    init-services -> svc-cron
    svc-cron -> legacy-services
    init-services -> svc-de
    svc-nginx -> svc-de
    svc-de -> legacy-services
    init-services -> svc-docker
    svc-de -> svc-docker
    svc-docker -> legacy-services
    init-services -> svc-kasmvnc
    svc-pulseaudio -> svc-kasmvnc
    svc-kasmvnc -> legacy-services
    init-services -> svc-kclient
    svc-kasmvnc -> svc-kclient
    svc-kclient -> legacy-services
    init-services -> svc-nginx
    svc-kclient -> svc-nginx
    svc-nginx -> legacy-services
    init-services -> svc-pulseaudio
    svc-pulseaudio -> legacy-services
  }
  Base Images: {
    "baseimage-kasmvnc:debianbookworm" <- "baseimage-debian:bookworm"
  }
  "openshot:latest" <- Base Images
# changelog
changelogs:
  - {date: "29.07.25:", desc: "Rebase to selkies. Breaking Change: HTTPS is now required. Either use a reverse proxy (like SWAG) with SSL cert or direct connect to port 3001 with HTTPS."}
  - {date: "23.12.24:", desc: "Initial release."}
